# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish docker image and publish to Heroku production

on:
  push:
    branches: [ "develop" ]
# pull_request:
#   branches: [ "develop" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - id: string
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ env.IMAGE_NAME }}
 
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: ./mvnw spring-boot:build-image -DskipTests=true -Pprod -Dspring.profiles.active=prod -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
       #  - name: Update dependency graph
        #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #  with:
      #    images: ${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}

      - name: Push
        run: |
          docker tag ${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }} ${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}:${{ steps.project.outputs.version }}
          docker push ${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}:${{ steps.project.outputs.version }}

      - name: Overwrite properties
        uses: "DamianReeves/write-file-action@master"
        with:
          path: src/main/resources/application-prod.properties
          write-mode: overwrite
          contents: |
            ${{secrets.PROD_APPLICATION_PROPERTIES}}

      - name: Overwrite pub key
        uses: "DamianReeves/write-file-action@master"
        with:
          path: src/main/resources/app.pub
          write-mode: overwrite
          contents: |
            ${{secrets.PROD_RSA_PUB}}
      
      - name: Overwrite priv key
        uses: "DamianReeves/write-file-action@master"
        with:
          path: src/main/resources/app.key
          write-mode: overwrite
          contents: |
            ${{secrets.PROD_RSA_PRIV}}
      
      # - name: Read properties
      #   id: read_props
      #   uses: juliangruber/read-file-action@v1
      #   with:
      #     path: ./src/main/resources/application-prod.properties
      # - name: Echo properties
      #   run: echo "${{ steps.read_props.outputs.content }}"

      - name: Login Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "dsec-backend" #Must be unique in Heroku
          heroku_email: "jan.rocek@fer.hr"
      
      # - run: | 
      #     heroku plugins:install java
      #     heroku create --no-remote
      #     heroku deploy:jar target/backend-${{ steps.project.outputs.version }}.jar --app dsec-backend
      
      